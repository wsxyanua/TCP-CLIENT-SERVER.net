@page
@model IndexModel
@using TcpServer.Extensions
@{
    ViewData["Title"] = "TCP Server Dashboard";
}

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-4 text-primary fw-bold">
            <i class="bi bi-server me-2"></i>TCP Server Dashboard
        </h1>
        <div class="btn-group">
            <button class="btn btn-outline-primary" onclick="refreshPage()">
                <i class="bi bi-arrow-clockwise me-2"></i>Refresh
            </button>
            @if (!Model.IsServerRunning)
            {
                <form method="post" class="d-inline">
                    <button type="submit" asp-page-handler="StartServer" class="btn btn-success">
                        <i class="bi bi-play-fill me-2"></i>Start Server
                    </button>
                </form>
            }
            else
            {
                <form method="post" class="d-inline">
                    <button type="submit" asp-page-handler="StopServer" class="btn btn-danger">
                        <i class="bi bi-stop-fill me-2"></i>Stop Server
                    </button>
                </form>
            }
        </div>
    </div>

    <div class="row g-4">
        <div class="col-md-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-primary bg-gradient text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-hdd-network me-2"></i>Server Status
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">
                            <i class="bi bi-circle-fill me-2"></i>Status
                        </span>
                        <span class="badge @(Model.IsServerRunning ? "bg-success" : "bg-danger")">
                            @(Model.IsServerRunning ? "Running" : "Stopped")
                        </span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">
                            <i class="bi bi-clock-history me-2"></i>Uptime
                        </span>
                        <span class="badge bg-info" id="uptimeDisplay" data-seconds="@Model.Uptime.TotalSeconds">@Model.Uptime.ToString(@"dd\.hh\:mm\:ss")</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">
                            <i class="bi bi-chat-dots me-2"></i>Total Messages
                        </span>
                        <span class="badge bg-primary">@Model.TotalMessages</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">
                            <i class="bi bi-clock me-2"></i>Time Requests
                        </span>
                        <span class="badge bg-success">@Model.TimeRequests</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="text-muted">
                            <i class="bi bi-people me-2"></i>Active Connections
                        </span>
                        <span class="badge bg-warning">@Model.ActiveConnections</span>
                    </div>
                </div>
                <div class="card-footer bg-light">
                    <form method="post" class="d-inline">
                        <button type="submit" asp-page-handler="ResetCounters" class="btn btn-warning">
                            <i class="bi bi-arrow-counterclockwise me-2"></i>Reset Counters
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-info bg-gradient text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-people me-2"></i>Connected Clients
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.ConnectedClients.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover align-middle">
                                <thead class="table-light">
                                    <tr>
                                        <th><i class="bi bi-person me-2"></i>Client Name</th>
                                        <th><i class="bi bi-geo-alt me-2"></i>Endpoint</th>
                                        <th><i class="bi bi-calendar-check me-2"></i>Connected Time</th>
                                        <th><i class="bi bi-clock-history me-2"></i>Last Activity</th>
                                        <th><i class="bi bi-gear me-2"></i>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var client in Model.ConnectedClients)
                                    {
                                        <tr>
                                            <td>@client.Value.ClientName</td>
                                            <td>@client.Value.EndPoint</td>
                                            <td>@client.Value.ConnectedTime.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                            <td>@client.Value.LastActivityTime.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                            <td>
                                                <form method="post" class="d-inline">
                                                    <input type="hidden" name="clientId" value="@client.Key" />
                                                    <button type="submit" asp-page-handler="DisconnectClient" class="btn btn-danger btn-sm">
                                                        <i class="bi bi-x-circle me-1"></i>Disconnect
                                                    </button>
                                                </form>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info d-flex align-items-center">
                            <i class="bi bi-info-circle-fill me-2"></i>
                            No clients connected
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-primary bg-gradient text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-list-ul me-2"></i>Server Logs
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle">
                            <thead class="table-light">
                                <tr>
                                    <th><i class="bi bi-clock me-2"></i>Timestamp</th>
                                    <th><i class="bi bi-tag me-2"></i>Level</th>
                                    <th><i class="bi bi-person me-2"></i>Client</th>
                                    <th><i class="bi bi-chat-left-text me-2"></i>Message</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var log in Model.ServerLogs.Reverse())
                                {
                                    <tr>
                                        <td>@log.Timestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                        <td>
                                            <span class="badge @(log.LogLevel.ToLower() switch {
                                                "error" => "bg-danger",
                                                "warning" => "bg-warning",
                                                _ => "bg-info"
                                            })">@log.LogLevel</span>
                                        </td>
                                        <td>@(string.IsNullOrEmpty(log.ClientName) ? "-" : log.ClientName)</td>
                                        <td>@log.Message</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <style>
        :root {
            --bg-color: #f8f9fa;
            --card-bg: #ffffff;
            --text-color: #212529;
            --border-color: #dee2e6;
            --table-hover: #f8f9fa;
        }

        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            min-height: 100vh;
        }

        .container-fluid {
            background-color: var(--bg-color);
            min-height: 100vh;
            padding: 2rem;
        }

        .card {
            background-color: var(--card-bg);
            border: 1px solid var(--border-color);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 1rem;
            border-radius: 8px;
        }

        .card-header {
            background-color: var(--card-bg);
            border-bottom: 1px solid var(--border-color);
            color: var(--text-color);
            padding: 1rem;
            border-radius: 8px 8px 0 0;
        }

        .text-muted {
            color: #6c757d !important;
        }

        .table {
            color: var(--text-color);
            background-color: var(--card-bg);
            margin-bottom: 0;
        }

        .table thead th {
            background-color: var(--bg-color);
            color: var(--text-color);
            border-bottom: 2px solid var(--border-color);
            padding: 1rem;
        }

        .table td {
            background-color: var(--card-bg);
            border-bottom: 1px solid var(--border-color);
            padding: 1rem;
            vertical-align: middle;
        }

        .table-hover tbody tr:hover {
            background-color: var(--table-hover);
        }

        .btn {
            border-radius: 6px;
            padding: 0.5rem 1rem;
            transition: all 0.2s;
        }

        .btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .btn-outline-primary {
            color: #0d6efd;
            border-color: #0d6efd;
        }

        .btn-outline-primary:hover {
            background-color: #0d6efd;
            color: #fff;
        }

        .btn-outline-danger {
            color: #dc3545;
            border-color: #dc3545;
        }

        .btn-outline-danger:hover {
            background-color: #dc3545;
            color: #fff;
        }

        .badge {
            padding: 0.5rem 0.8rem;
            border-radius: 6px;
            font-weight: 500;
        }

        .badge.bg-primary { background-color: #0d6efd !important; }
        .badge.bg-success { background-color: #198754 !important; }
        .badge.bg-info { background-color: #0dcaf0 !important; }
        .badge.bg-warning { background-color: #ffc107 !important; }
        .badge.bg-danger { background-color: #dc3545 !important; }

        .alert-info {
            background-color: #cff4fc;
            border: 1px solid #b6effb;
            color: #055160;
            padding: 1rem;
            border-radius: 6px;
        }

        .display-4 {
            font-size: 2rem;
            margin-bottom: 0;
        }
    </style>
    <script>
        function refreshPage() {
            location.reload();
        }

        function scrollToBottom() {
            const logContainer = document.getElementById('logContainer');
            logContainer.scrollTop = logContainer.scrollHeight;
        }

        // Scroll to bottom on page load
        window.onload = function() {
            scrollToBottom();
        };

        // tự động refersh trang sau 10 
        setTimeout(function() {
            window.location.reload();
        }, 10000);
    </script>
}
